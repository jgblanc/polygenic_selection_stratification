# Snakefile to do the pre-data processing for the Test Example
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
CONTRASTS = ["euraisa-lat", "eurasia-long", "eur-lat", "eur-long", "sdi-eur", "eas-nfe", "eas-sas", "eas-afr", "eas-amr", "nfe-sas", "nfe-afr", "nfe-amr", "sas-afr", "sas-amr", "afr-amr"]
SUBDATASET = ["eurasia", "all", "nfe", "nfe_no_ceu"]
GWAS=["ALL", "WBS", "q1", "q2", "q3", "q4"]


rule all:
    input:
        expand("data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.psam", chr=CHR, gwas=GWAS, contrasts=CONTRASTS)


## Recode SNPs to match UKBB

# Get allele frequency in HGDP

rule HGDP_freq:
    input:
        psam="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.psam",
        pvar="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.pvar",
        pgen="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.pgen"
    output:
        freq="data/HGDP1KG/variants-raw/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.afreq"
    params:
        prefix_in="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}",
        prefix_out="data/HGDP1KG/variants-raw/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
        --freq \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out}
        """

# Get list of SNPs to recode

rule recode_list:
    input:
        freq_hgdp="data/HGDP1KG/variants-raw/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.afreq",
        freq_ukbb="data/ukbb/variants/ukb_imp_chr{chr}_v3.afreq"
    output:
        "data/HGDP1KG/variants-fliped/flipped_snps_{chr}.txt"
    shell:
        """
        Rscript code/HGDP1KG/flip_snps.R {input.freq_ukbb} {input.freq_hgdp} {output}
        """

# Recode HGDP with UKBB ref/alt alleles and save to new directory

rule HGDP_recode:
    input:
        psam="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.psam",
        pvar="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.pvar",
        pgen="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.pgen",
      	snp_list="data/HGDP1KG/variants-fliped/flipped_snps_{chr}.txt"
    output:
        psam="data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.psam",
        pvar="data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.pvar",
        pgen="data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}.pgen"
    params:
        prefix_in="/gpfs/data/berg-lab/data/HGDP1KG/plink2-files-hg19/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}",
        prefix_out="data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
        --extract {input.snp_list} \
	      --ref-allele force {input.snp_list} \
	      --make-pgen \
        --out {params.prefix_out}
        """



