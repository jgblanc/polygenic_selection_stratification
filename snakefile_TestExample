# Snakefile to do the pre-data processing for the Test Example
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
CONTRASTS = ["Afr-Eur"]
GWAS=["complete", "half", "quarter", "threequarter", "none"]


rule all:
    input:
        expand("data/TestExample/r/{gwas}/{contrasts}_chr{chr}.rvec", chr=CHR, gwas=GWAS, contrasts=CONTRASTS)


# Get allele frequencies

rule get_AF_Test:
    input:
        test="data/TestExample/ids/test_ids/test.txt"
    output:
        test="data/TestExample/variantFreq/test_{chr}.afreq"
    params:
        prefix_in="data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}",
        prefix_out_test="data/TestExample/variantFreq/test_{chr}"
    resources:
        mem_mb=38000,
        time="00:30:00"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
        --freq \
        --keep {input.test} \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out_test}
        """

# Get overlapping SNPs

rule get_overlapping_snps:
    input:
        freq_test="data/TestExample/variantFreq/test_{chr}.afreq",
	      freq_gwas="data/ukbb/variantFreq/{gwas}_{chr}.afreq"
    output:
        "data/TestExample/variants/{gwas}/{contrasts}/overlappingSNPs_chr{chr}.txt"
    shell:
        """
        Rscript code/TestExample/overlapping_snps.R {input.freq_gwas} {input.freq_test} {output}
        """

# Get allele freqeuncy contrasts

rule get_popAF:
    input:
        test="data/TestExample/ids/test_ids/test.txt",
        snps="data/TestExample/variants/{gwas}/{contrasts}/overlappingSNPs_chr{chr}.txt"
    output:
        "data/TestExample/popAF/{gwas}/{contrasts}/popAF_{chr}.Afr.afreq",
        "data/TestExample/popAF/{gwas}/{contrasts}/popAF_{chr}.Eur.afreq"
    params:
        prefix_in="data/HGDP1KG/plink2-files/gnomad.genomes.v3.1.2.hgdp_tgp.chr{chr}",
        prefix_out="data/TestExample/popAF/{gwas}/{contrasts}/popAF_{chr}"
    resources:
        mem_mb=38000,
        time="00:30:00"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
	      --extract {input.snps} \
        --keep {input.test} \
	      --freq \
        --within {input.test} POP \
	      --loop-cats POP \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out}
        """

# Compute r vectors

rule compute_r:
    input:
        afr="data/TestExample/popAF/{gwas}/{contrasts}/popAF_{chr}.Afr.afreq",
	      eur="data/TestExample/popAF/{gwas}/{contrasts}/popAF_{chr}.Eur.afreq"
    output:
        rvec="data/TestExample/r/{gwas}/{contrasts}_chr{chr}.rvec"
    shell:
        """
        Rscript code/TestExample/compute_afr_eur_r.R {input.afr} {input.eur} {output.rvec}
        """
